package Java09Recursion;

import java.util.ArrayList;

public class Recursion06SubSets {


    //1: Given a string, WAM to return all its subsequences in an arraylist. A String is a
    //subsequence of a given String that is generated by deleting some character of a given
    //string without changing its order.

    public static ArrayList<String> subSequence(String str) {

        ArrayList<String> ans = new ArrayList<>();
        //baseCase
        if (str.isEmpty()) {
            ans.add("");
            return ans;
        }

        //subCase
        char curr = str.charAt(0); //a

        ArrayList<String> smallAns = subSequence(str.substring(1));

        // smallAns = ["bc", "b", "c", ""];
        // ans = ["bc", "abc", "b", "ab", "c", "ac", "", "c"]
        for (String s : smallAns) {
            ans.add(s); //bc
            ans.add(curr + s); //abc
        }
        return ans;
    }

    //2: Given a string, write a method to print all its subsequences.
    public static void printSubsequence(String str){
        
    }

    public static void main(String[] args) {

        ArrayList<String> arrLst = subSequence("abc");

        for (String ss : arrLst) {
            System.out.println(ss);
        }

        printSubsequence("abc");
    }
}
